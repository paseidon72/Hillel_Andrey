# Написать программу для работы с данными о людях.
# Программа должна уметь загружать данные из файла, сохранять в файл, вводить
# новые записи и производить поиск по существующим записям.
# Программа сохраняет данные о человеке, а именно: ФИО, дата рождения, дата
# смерти (может отсутствовать) и пол. При этом ФИО вводится 3 полями:
# Имя (обязательно), Фамилия и Отчество могут не вводится.
# Программа должна уметь вычислять возраст человека (количество полных лет) на
# основании даты рождения и даты смерти или сегодняшней даты, если дата смерти
# отсутствует. Дата рождения и дата смерти может вводится в формате:
# 12.10.1980
# 11 10 2000
# 01/02/1995
# 3-9-2007
# Поиск может производится по имени, фамилии и отчеству и выдаёт все варианты,
# которые подходят под строку поиска (это может быть имя, или фамилия, или имя
# и фамилия, или только часть имени и т.д.). К примеру, есть такие записи:
# Евгений Крут Михайлович, 12.10.1980, 11.10.2001, m
# Евгения, 12.10.1980, 12.10.2001, f
# Дмитрий Евгеньевич, 10.03.2000, m
#
# При поиске "евген", выдаются такие данные:
# Евгений Крут Михайлович  20 лет, мужчина. Родился: 12.10.1980. Умер: 11.10.2001.
# Евгения 21 год, женщина. Родилась: 12.10.1980. Умерла: 12.10.2001.
# Дмитрий Евгеньевич 22 года, мужчина. Родился: 10.03.2000.
#
# Программа при старте начинает работать с пустой базой данных. Оператор может
# заполнять её, а может при желании загрузить ранее сохранённые данные из файла
# (желательно Excel).
# Когда есть какие-то записи оператор может сохранить их в файл введя его название.
#
# Желательная структура программы:
# в основной части программы находится вечный цикл с меню, что может выбрать оператор;
# сами данные организованы в виде класса в другом файле, который импортируется в файл
# основной части программы, где создаётся объект соответствующего класса перед заходом
# в вечный цикл;
# все пункты меню основной части программы вызывают те или иные методы у созданного
# объекта данных;
# при желании можно в третьем файле создать отдельный класс Person который будет
# импортироваться в файл с данными. Именно в этом классе будет происходить валидация
# введённых данных.
#
# *Все перечисленные описания являются пожеланиями по реализации дипломного проекта и в
# силу тех или иных причин могут быть изменены по желанию студента. Основные требования:
# программа позволяет ввести новые данные о людях;
# производить поиск по уже введённым данным;
# правильно рассчитывать количество полных лет человека на основе даты рождения и даты
# смерти или текущей даты.


from date_base import DB



def main():

    while True:
        print("1. Ввести новую запись")
        print("2. Поиск в БД")
        print("3. Загрузить данные в БД из файла")
        print("4. Сохранить данные из БД в файл")
        print("5. Экспортировать данные в json формат")
        print('-' * 50)
        print("0. Выход")
        choice = input("Ваш выбор: ")

        if not choice.isdigit() or int(choice) > 5:
            print("Не корректный ввод")
            continue
        elif int(choice) == 0:
            break
        data = DB
        call_function = {1: data.input_data, 2: data.find, 3: data.get_from_file,
                         4: data.get_intu_file, 5: data.export_in_json}
        call_function[int(choice)](int(choice))







if __name__ == "__main__":
    main()